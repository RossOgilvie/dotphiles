# USEFUL REFERENCE DOCS
# The wiki, obvs, https://wiki.hyprland.org/Configuring
# random config https://github.com/ItsDrike/dotfiles/blob/wayland/home/.config/hypr/hyprland.conf

$hscr = /home/ross/.config/hypr/scripts
	
# AUTOSTARTS
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = /usr/lib/polkit-kde-authentication-agent-1 # For authetication pop-ups

exec-once = /home/ross/.scripts/wallpaper
exec-once = dunst

exec-once = gsettings set $gnome-schema gtk-theme 'Pop-dark'
exec-once = gsettings set $gnome-schema icon-theme 'Pop'
exec-once = gsettings set $gnome-schema cursor-theme 'elementary'
exec-once = gsettings set $gnome-schema font-name 'Fira Mono 12'
exec-once = gsettings set org.gnome.desktop.interface color-scheme prefer-dark

# See https://wiki.hyprland.org/Configuring/Monitors/
# At my desk, the external monitor DP-1 is to the left of the laptop screen eDP-1. By matching eDP-1 first, other monitors are specified relative to it.
monitor=eDP-1,preferred,auto,auto
monitor=,preferred,auto-left,auto

input {
kb_layout = ross

# 2 - Cursor focus will be detached from keyboard focus. Clicking on a window will move keyboard focus to that window.
follow_mouse = 2

touchpad {
natural_scroll = no
tap_button_map = lmr
drag_lock = true
}
}

device {
name = wacom-one-by-wacom-m-pen
output = eDP-1
}

device {
name = 2.4g-wireless-mouse
sensitivity = -0.4
accel_profile = flat
}
device {
name = 2.4g-mouse
sensitivity = -0.4
accel_profile = flat
}

# Disabling using hyprctl no longer works, since enabled is a per-device config
# Adjust it with a variable. 
$LAPTOP_TOUCHPAD_ENABLED = true
device {
name = asue140d:00-04f3:31b9-touchpad
enabled = $LAPTOP_TOUCHPAD_ENABLED
}
$LAPTOP_KB_ENABLED = true
device {
name = at-translated-set-2-keyboard
enabled = $LAPTOP_KB_ENABLED
}
$LAPTOP_TOUCHSCREEN_ENABLED = false
device {
name = elan9008:00-04f3:2e36
enabled = $LAPTOP_TOUCHSCREEN_ENABLED
}


gestures {
workspace_swipe = on
workspace_swipe_distance = 300
}

general {
gaps_in = 5
gaps_out = 0
border_size = 2
col.active_border = rgba(577bb5ee)
col.inactive_border = rgba(595959aa)

layout = master # set the layout to master, ie, one master window and a bunch of minor windows.
}

decoration {
rounding = 10
blur {
 enabled = false
# size = 3
# passes = 1
# new_optimizations = on
}
shadow {
 enabled = false
# shadow_range = 3
# shadow_render_power = 3
# col.shadow = rgba(1a1a1aee)
}
}

animations {
enabled = yes
# animation = transition, on/off, speed in 100ms, curve, style
#animation = windows, 1, 5, default, slide top
animation = windows, 1, 5, default, slide
animation = workspaces, 1, 7, default, slide
animation = specialWorkspace, 1, 5, default, fade
}

misc {
disable_hyprland_logo = true
disable_splash_rendering = true
#middle_click_paste = false
}

binds {
allow_workspace_cycles=true # this seems like a bug with repeatedly pressing movetoworkspace previous.
}

cursor {
#no_warps = true # cursor warps moves the cursor when the focus moves.
}

dwindle {
# I don't use dwindle, but these are the normal settings.
pseudotile = yes 
preserve_split = yes
}

master {
# new_status = master
# no_gaps_when_only = true TODO This was removed, the wiki has a complicted set of rules to replace it.
# How much of the screen should the scratchpads take up?
special_scale_factor = 1
}



# I used to have blur for the overlay layers, but actually it seems fine just to dim them without blur.
# layerrule = blur,^(rofi)$
# layerrule = blur,^(eww)$




# Common dialog boxes
# Make them float, centered, and reasonably sized
$regex_dialog = title:^(Open|Save|Choose|Attach).*
windowrule = float,$regex_dialog
windowrulev2 = center,$regex_dialog
windowrulev2 = size 80% 80%,$regex_dialog

windowrulev2 = suppressevent maximize,class:^(libreoffice.*)$

# Variables for keys and clicks
$mainMod = SUPER
$MOUSE_LMB = mouse:272
$MOUSE_RMB = mouse:273
$MOUSE_MMB = mouse:274





# SCRATCHPADS
# The new way is using a script
# First there's a work-around to get hotloaded window rules by sourcing them from a separate file
# $spec-wksp-rules = $hscr/special-workspace-rules.conf
# exec-once = $hscr/hypr-special-workspace --initialize
# source = $spec-wksp-rules

# This script runs the app if it's not running, otherwise toggles the workspace
# bind = $mainMod, RETURN, exec, $hscr/hypr-special-workspace alacritty Alacritty 
# bind = $mainMod, c, exec, $hscr/hypr-special-workspace qalculate-gtk qalculate-gtk
# bind = $mainMod, s, exec, $hscr/hypr-special-workspace spotify Spotify 
# bind = $mainMod, e, exec, $hscr/hypr-special-workspace nemo nemo 
# bind = $mainMod, t, exec, $hscr/hypr-special-workspace thunderbird thunderbird 
# bind = $mainMod, z, exec, $hscr/hypr-special-workspace zotero Zotero 

bind = $mainMod, RETURN, togglespecialworkspace, kitty
workspace = special:kitty, persistent:false, on-created-empty:kitty, gapsout:100
windowrulev2 = workspace +0, workspace:name:special:kitty
windowrulev2 = workspace special:alacritty, initialClass:(Kitty)

bind = $mainMod, c, togglespecialworkspace, qalculate-gtk
workspace = special:qalculate-gtk, persistent:false, on-created-empty:qalculate-gtk, gapsout:100
windowrulev2 = workspace +0, workspace:name:special:qalculate-gtk
windowrulev2 = workspace special:qalculate-gtk, initialClass:(qalculate-gtk)

bind = $mainMod, e, togglespecialworkspace, nemo
workspace = special:nemo, persistent:false, on-created-empty:nemo, gapsout:100
windowrulev2 = workspace +0, workspace:name:special:nemo
windowrulev2 = workspace special:nemo, initialClass:(nemo)

bind = $mainMod, s, togglespecialworkspace, spotify
workspace = special:spotify, persistent:false, on-created-empty:spotify, gapsout:10
windowrulev2 = workspace +0, workspace:name:special:spotify
windowrulev2 = workspace special:spotify, initialClass:(Spotify)

bind = $mainMod, t, togglespecialworkspace, thunderbird
workspace = special:thunderbird, persistent:false, on-created-empty:thunderbird, gapsout:10
windowrulev2 = workspace +0, workspace:name:special:thunderbird
windowrulev2 = workspace special:thunderbird, initialClass:(thunderbird)

bind = $mainMod, z, togglespecialworkspace, zotero
workspace = special:zotero, persistent:false, on-created-empty:zotero, gapsout:10
windowrulev2 = workspace +0, workspace:name:special:zotero
windowrulev2 = workspace special:zotero, initialClass:(Zotero)




# KEY BINDINGS
# The actions are called 'dispatchers' https://wiki.hyprland.org/Configuring/Dispatchers/
# BASIC BINDS
bind = $mainMod, Escape, killactive
bind = $mainMod, Delete, exec, hyprctl kill # enter kill mode, like xkill. Cancel out with escape.
bind = $mainMod SHIFT CTRL, Escape, exit

# PROGRAM SPAWNS
bind = , XF86Go, exec, eww-control
bind = $mainMod, XF86Go, exec, nwg-drawer
bind = $mainMod, f, exec, firefox 
bind = $mainMod, m, exec, mochi
bind = $mainMod, o, exec, okular
bind = $mainMod, v, exec, pavucontrol
bind = $mainMod, w, exec, code
bind = $mainMod, x, exec, xournalpp
# These are now scratchpads
# bind = $mainMod, s, exec, spotify 
# bind = $mainMod, t, exec, thunderbird
# bind = $mainMod, z, exec, zotero

# FUNCTION KEYS
bind = , F1, exec, /home/ross/.scripts/volume toggle
bind = SHIFT, F1, exec, /home/ross/.scripts/music-control play
binde = , F2, exec, /home/ross/.scripts/volume down
binde = , F3, exec, /home/ross/.scripts/volume up
binde = , F4, exec, /home/ross/.scripts/brightness down
binde = , F5, exec, /home/ross/.scripts/brightness up
# binde = , F6, exec, /home/ross/.config/hypr/scripts/disable-trackpad
bind = , F8, exec, wl-mirror eDP-1
bind = , F12, exec, /home/ross/.scripts/battery
bind = , XF86PowerOff, exec, $hscr/disable-input toggle-keyboard
#TODO media keys, which should also cover headset buttons





# FOCUS AND WINDOW MANIPULATION
# These first four use the master layout specific commands
bind = $mainMod, right, layoutmsg, cyclenext
bind = $mainMod, left, layoutmsg, cycleprev
bind = $mainMod CTRL, right, layoutmsg, swapnext
bind = $mainMod CTRL, left, layoutmsg, swapprev

# Change window property
bind = $mainMod, up, fullscreen
bind = $mainMod, down, togglefloating
bind = $mainMod, asciitilde, exec, $hscr/hypr-despecialise # here I think of a window being in a special workspace as a property rather than a location

# Manipulate monitors
bind = $mainMod, backspace, swapactiveworkspaces, current +1 
bind = $mainMod SHIFT, backspace, focusmonitor, +1
bind = $mainMod CTRL, backspace, movewindow, mon:+1

# Resizing
bindm = $mainMod, $MOUSE_LMB, movewindow
bindm = $mainMod SHIFT, $MOUSE_LMB, resizewindow
binde = $mainMod, equal, resizeactive, 20 0
binde = $mainMod, minus, resizeactive, -20 0

# Switch workspaces with mainMod + [0-9], swapping to current monitor (like xmonad)
bind = $mainMod, 1, exec, $hscr/hypr-swap-workspace 1
bind = $mainMod, 2, exec, $hscr/hypr-swap-workspace 2
bind = $mainMod, 3, exec, $hscr/hypr-swap-workspace 3
bind = $mainMod, 4, exec, $hscr/hypr-swap-workspace 4
bind = $mainMod, 5, exec, $hscr/hypr-swap-workspace 5
bind = $mainMod, 6, exec, $hscr/hypr-swap-workspace 6
bind = $mainMod, tab, workspace, previous

# Move active window to a workspace with mainMod + CTRL + [0-9]
bind = $mainMod CTRL, 1, movetoworkspace, 1
bind = $mainMod CTRL, 2, movetoworkspace, 2
bind = $mainMod CTRL, 3, movetoworkspace, 3
bind = $mainMod CTRL, 4, movetoworkspace, 4
bind = $mainMod CTRL, 5, movetoworkspace, 5
bind = $mainMod CTRL, 6, movetoworkspace, 6
bind = $mainMod CTRL, tab, movetoworkspace, previous
